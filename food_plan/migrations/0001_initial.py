# Generated by Django 4.2.5 on 2023-09-30 18:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_alter_user_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='client', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('subscription', models.CharField(choices=[('R', 'Regular'), ('P', 'Premium')], default='R', max_length=7, verbose_name='Подписка')),
                ('subscription_expiration_date', models.DateField(blank=True, default=None, null=True, verbose_name='Дата окончания подписки')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Foodstuff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Продукт')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Цена')),
                ('weight', models.FloatField(default=0.1, verbose_name='Вес в кг')),
                ('category', models.CharField(choices=[('рыба', 'рыба'), ('мясо', 'мясо'), ('зерновые продукты', 'зерновые продукты'), ('продукты пчеловодства', 'продукты пчеловодства'), ('орехи', 'орехи'), ('бобовые продукты', 'бобовые продукты'), ('молочные продукты', 'молочные продукты')], max_length=21, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Все продукты',
                'verbose_name_plural': 'Все продукты',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название рецепта')),
                ('menu_type', models.CharField(choices=[('Classic', 'Classic'), ('Low Сarb', 'Low Сarb'), ('Vegetarian', 'Vegetarian'), ('Keto', 'Keto')], default='Classic', max_length=10, verbose_name='Тип меню')),
                ('cooking_time', models.IntegerField(verbose_name='Время приготовления, мин.')),
                ('calories', models.IntegerField(verbose_name='Калорий на 100г.')),
                ('fats', models.IntegerField(verbose_name='Жиров на 100г.')),
                ('proteins', models.IntegerField(verbose_name='Белков на 100г.')),
                ('carbs', models.IntegerField(verbose_name='Углеводов на 100г.')),
                ('image', models.ImageField(upload_to='', verbose_name='Картинка')),
                ('text', models.TextField(verbose_name='Инструкция рецепта')),
                ('is_free', models.BooleanField(default=False, verbose_name='Бесплатный рецепт')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_name', models.CharField(choices=[('1 month', '1'), ('3 month', '3'), ('6 month', '6'), ('9 month', '9'), ('12 month', '12')], max_length=8, verbose_name='Название подписки')),
                ('date', models.DateField(verbose_name='Дата платежа')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_type', models.CharField(choices=[('Classic', 'Classic'), ('Low Сarb', 'Low Сarb'), ('Vegetarian', 'Vegetarian'), ('Keto', 'Keto')], default='Classic', max_length=10, verbose_name='Тип меню')),
                ('number_persons', models.IntegerField(default=1, verbose_name='Количество персон')),
                ('calories', models.CharField(choices=[('Basic 1000', 'Basic'), ('Fit 1400', 'Fit'), ('Balance 1800', 'Balance')], default='Balance 1800', max_length=12, verbose_name='Калорий в день')),
                ('dish_type', models.CharField(choices=[('breakfast', 'breakfast'), ('lunch', 'lunch'), ('dinner', 'dinner'), ('dessert', 'dessert')], max_length=9, verbose_name='Тип блюда')),
                ('allergies', models.ManyToManyField(blank=True, default=None, related_name='meal_plans', to='food_plan.foodstuff', verbose_name='Продукты, на которые есть алергия')),
                ('client', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meal_plan', to='food_plan.client', verbose_name='Клиент')),
                ('recipes', models.ManyToManyField(related_name='meal_plans', to='food_plan.recipe', verbose_name='Рецепты')),
            ],
            options={
                'verbose_name': 'План питания',
                'verbose_name_plural': 'Планы питания',
            },
        ),
        migrations.CreateModel(
            name='FoodList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(default=0.1, verbose_name='Вес в кг')),
                ('food_names', models.ManyToManyField(related_name='food_lists', to='food_plan.foodstuff', verbose_name='Продукты')),
                ('recipes', models.ManyToManyField(related_name='food_lists', to='food_plan.recipe')),
            ],
            options={
                'verbose_name': 'Список продуктов',
                'verbose_name_plural': 'Списки продуктов',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client', to='food_plan.transaction', verbose_name='Тразакции'),
        ),
    ]
